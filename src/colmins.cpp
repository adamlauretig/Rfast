//Author: Manos Papadakis

// This file was generated by compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>
#include <algorithm>
#include <vector>

using namespace Rcpp;
using namespace std;
using namespace arma;

//[[Rcpp::export]]
vector<double> colmin(NumericMatrix x,bool value=false){
  unsigned int i,p=x.ncol();
  mat X = mat(x.begin(), x.nrow(), p, false); 
  vector<double> F(p);
  vector<double>::iterator FF=F.begin();
  if(value){
  	rowvec f=min(X,0);
  	rowvec::iterator ff=f.begin();
  	for(;FF!=F.end();++FF,++ff)
      *FF=*ff;
  }else
    for(i=0;i<p;++i,++FF)
      *FF=(X.col(i)).index_min()+1;
  return F;
}

// find the minimum value/index of its collumn
RcppExport SEXP Rfast_colmin(SEXP xSEXP,SEXP ySEXP) {
BEGIN_RCPP
    RObject __result;
    RNGScope __rngScope;
    traits::input_parameter< NumericMatrix >::type x(xSEXP);
    traits::input_parameter< bool >::type y(ySEXP);
    __result = wrap(colmin(x,y));
    return __result;
END_RCPP
}
